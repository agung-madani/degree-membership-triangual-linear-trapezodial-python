# -*- coding: utf-8 -*-
"""DegreeofMembershipLinearTringularTrapezodialFunction.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z00ylWY8dITTKrowwXeqEK9TGPrnlmbR
"""

# Import the matplotlib library for creating plots
import matplotlib.pyplot as plt

# Define a function for a triangular membership function
def triangularMembership(x, a, b, c):
    # Calculate the degree of membership of x in the triangular function
    y = max(min((x-a)/(b-a),(c-x)/(c-b)),0)

    # Create a plot of the membership function
    plt.plot([a,b,c],[0,1,0],"g")
    plt.plot([x],[y],"ro")
    plt.title("Triangular membership function")
    plt.ylabel("Degree of Membership")
    plt.xlabel("x")
    plt.show()

    # Return the degree of membership
    return f'the y value/degree of membership at point x = {x} is {y}'

# Define a function for a linear up membership function
def linearUpMembership(x, a, b):
    # Calculate the degree of membership of x in the linear up function
    y = (x-a)/(b-a)

    # Create a plot of the membership function
    plt.plot([a,b],[0,1],"g")
    plt.plot([x],[y],"ro")
    plt.title("Linear Up membership function")
    plt.ylabel("Degree of Membership")
    plt.xlabel("x")
    plt.show()

    # Return the degree of membership
    return f'the y value/degree of membership at point x = {x} is {y}'

# Define a function for a linear down membership function
def linearDownMembership(x, a, b):
    # Calculate the degree of membership of x in the linear down function
    y = (b-x)/(b-a)

    # Create a plot of the membership function
    plt.plot([a,b],[1,0],"g")
    plt.plot([x],[y],"ro")
    plt.title("Linear Down membership function")
    plt.ylabel("Degree of Membership")
    plt.xlabel("x")
    plt.show()

    # Return the degree of membership
    return f'the y value/degree of membership at point x = {x} is {y}'

# Define a function for a trapezoidal membership function
def trapezoidalMembership(x, a, b, c, d):
    # Calculate the degree of membership of x in the trapezoidal function
    y = max(min((x-a)/(b-a),1,(d-x)/(d-c)),0)

    # Create a plot of the membership function
    plt.plot([a,b,c,d],[0,1,1,0],"g")
    plt.plot([x],[y],"ro")
    plt.title("Trapezoidal membership function")
    plt.ylabel("Degree of Membership")
    plt.xlabel("x")
    plt.show()

    # Return the degree of membership
    return f'the y value/degree of membership at point x = {x} is {y}'

# Test the triangular membership function with x=7, a=1, b=5, and c=9
f1 = triangularMembership(7,1,5,9) 
print(f1)

# Test the linear up membership function with x=7, a=1, and b=9
f2 = linearUpMembership(7,1,9) 
print(f2)

# Test the linear down membership function with x=9, a=0, and b=9
f3 = linearDownMembership(9,0,9) 
print(f3)

# Test the trapezoidal membership function with x=4, a=0, b=4, c=5, and d=9
f4 = trapezoidalMembership(4,0,4,5,9) 
print(f4)